SetLimitsUnitConcreteTest
├── When caller is not Owner
│   └── It should revert with OwnableUnauthorizedAccount
└── When caller is Owner
    ├── When the new limit is greater than half the maximum value of uint256
    │   └── It should revert with IXERC20_LimitsTooHigh
    └── When the new limit is less than or equal to half the maximum value of uint256
        ├── When the new limit is less than or equal to the old limit
        │   ├── When the current limit is less than or equal to the difference between the old limit and the new limit
        │   │   ├── It should set a new max minting limit for the bridge
        │   │   ├── It should set the current minting limit for the bridge to zero
        │   │   ├── It should set a new minting rate per second for the bridge
        │   │   ├── It should set the minting timestamp to the current timestamp
        │   │   ├── It should set a new max burning limit for the bridge
        │   │   ├── It should set the current burning limit for the bridge to zero
        │   │   ├── It should set a new burning rate per second for the bridge
        │   │   ├── It should set the burning timestamp to the current timestamp
        │   │   └── It should emit a {BridgeLimitsSet} event
        │   └── When the current limit is greater than the difference between the old limit and the new limit
        │       ├── It should set a new max minting limit for the bridge
        │       ├── It should set the current minting limit for the bridge to the current limit minus the difference between the old limit and the new limit
        │       ├── It should set a new minting rate per second for the bridge
        │       ├── It should set the minting timestamp to the current timestamp
        │       ├── It should set a new max burning limit for the bridge
        │       ├── It should set the current burning limit for the bridge to the current limit minus the difference between the old limit and the new limit
        │       ├── It should set a new burning rate per second for the bridge
        │       ├── It should set the burning timestamp to the current timestamp
        │       └── It should emit a {BridgeLimitsSet} event
        └── When the new limit is greater than the old limit
            ├── It should set a new max minting limit for the bridge
            ├── It should set the current minting limit for the bridge to the current limit plus the difference between the new limit and the old limit
            ├── It should set a new minting rate per second for the bridge
            ├── It should set the minting timestamp to the current timestamp
            ├── It should set a new max burning limit for the bridge
            ├── It should set the current burning limit for the bridge to the current limit plus the difference between the new limit and the old limit
            ├── It should set a new burning rate per second for the bridge
            ├── It should set the burning timestamp to the current timestamp
            └── It should emit a {BridgeLimitsSet} event